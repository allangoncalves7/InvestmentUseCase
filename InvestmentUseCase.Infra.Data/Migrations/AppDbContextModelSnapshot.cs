// <auto-generated />
using System;
using InvestmentUseCase.Infra.Data.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace InvestmentUseCase.Infra.Data.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("InvestmentUseCase.Domain.Entities.Customer", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Account")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("character varying(10)");

                    b.Property<string>("Agency")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("character varying(10)");

                    b.Property<string>("DAC")
                        .IsRequired()
                        .HasMaxLength(1)
                        .HasColumnType("character varying(1)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("character varying(200)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("character varying(200)");

                    b.HasKey("Id");

                    b.HasIndex("Account");

                    b.HasIndex("Agency");

                    b.HasIndex("DAC");

                    b.HasIndex("Name");

                    b.ToTable("Customers");

                    b.HasData(
                        new
                        {
                            Id = new Guid("5dfa53c1-973f-41d4-9366-cbbb2922b22e"),
                            Account = "56789",
                            Agency = "1234",
                            DAC = "1",
                            Email = "joao_silva@gmail.com",
                            Name = "João Silva"
                        },
                        new
                        {
                            Id = new Guid("16aecf48-db83-479f-9556-913414c407bf"),
                            Account = "98765",
                            Agency = "4321",
                            DAC = "2",
                            Email = "maria_santos@gmail.com",
                            Name = "Maria dos Santos"
                        },
                        new
                        {
                            Id = new Guid("edda9d43-96a1-497b-bd1e-d0f2385f47f5"),
                            Account = "12345",
                            Agency = "5678",
                            DAC = "3",
                            Email = "jose.p@gmail.com",
                            Name = "José Pereira"
                        },
                        new
                        {
                            Id = new Guid("a7291cb8-e069-4a75-b53c-f0d139a1e442"),
                            Account = "54321",
                            Agency = "8765",
                            DAC = "4",
                            Email = "ana_s@gmail.com",
                            Name = "Ana Souza"
                        },
                        new
                        {
                            Id = new Guid("cfa5377c-b839-45f0-8ed3-c5c6fc067a8b"),
                            Account = "678980",
                            Agency = "9876",
                            DAC = "5",
                            Email = "francisco@gmail.com",
                            Name = "Francisco Oliveira"
                        });
                });

            modelBuilder.Entity("InvestmentUseCase.Domain.Entities.Investment", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid>("CustomerId")
                        .HasColumnType("uuid");

                    b.Property<decimal>("InvestedCapital")
                        .HasColumnType("numeric(18,2)");

                    b.Property<Guid>("InvestmentProductId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("CustomerId");

                    b.HasIndex("InvestmentProductId");

                    b.ToTable("Investments");

                    b.HasData(
                        new
                        {
                            Id = new Guid("bff7a047-04d6-4cd0-9724-f316fc958f68"),
                            CustomerId = new Guid("5dfa53c1-973f-41d4-9366-cbbb2922b22e"),
                            InvestedCapital = 1000.00m,
                            InvestmentProductId = new Guid("cd939f0a-fc4b-423c-b001-f7a558ba483d")
                        },
                        new
                        {
                            Id = new Guid("627fffb3-1c2d-4272-851f-aa346f48b809"),
                            CustomerId = new Guid("16aecf48-db83-479f-9556-913414c407bf"),
                            InvestedCapital = 5000.00m,
                            InvestmentProductId = new Guid("0303d605-a32a-4587-b641-160f008e5d14")
                        },
                        new
                        {
                            Id = new Guid("642161a6-92d1-4df9-99e8-8f2a99bcf458"),
                            CustomerId = new Guid("5dfa53c1-973f-41d4-9366-cbbb2922b22e"),
                            InvestedCapital = 5000.00m,
                            InvestmentProductId = new Guid("0303d605-a32a-4587-b641-160f008e5d14")
                        },
                        new
                        {
                            Id = new Guid("cd2a8bc4-d995-46eb-9a11-b65bfa566be7"),
                            CustomerId = new Guid("edda9d43-96a1-497b-bd1e-d0f2385f47f5"),
                            InvestedCapital = 3000.00m,
                            InvestmentProductId = new Guid("41ef04f6-83c9-46b5-bd38-f08f91b1a66e")
                        },
                        new
                        {
                            Id = new Guid("0c11f32e-7543-4601-8056-7ef89cd775d8"),
                            CustomerId = new Guid("a7291cb8-e069-4a75-b53c-f0d139a1e442"),
                            InvestedCapital = 2000.00m,
                            InvestmentProductId = new Guid("0c62f3db-1214-48d0-98b0-fdcc9ffc93fe")
                        });
                });

            modelBuilder.Entity("InvestmentUseCase.Domain.Entities.InvestmentProduct", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("character varying(10)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.HasKey("Id");

                    b.HasIndex("Code");

                    b.HasIndex("Name");

                    b.ToTable("InvestmentProducts");

                    b.HasData(
                        new
                        {
                            Id = new Guid("cd939f0a-fc4b-423c-b001-f7a558ba483d"),
                            Code = "TD001",
                            Name = "Tesouro Direto"
                        },
                        new
                        {
                            Id = new Guid("0303d605-a32a-4587-b641-160f008e5d14"),
                            Code = "CDB002",
                            Name = "CDB Resgate Diário"
                        },
                        new
                        {
                            Id = new Guid("41ef04f6-83c9-46b5-bd38-f08f91b1a66e"),
                            Code = "CDB003",
                            Name = "CDB Pós Fixado"
                        },
                        new
                        {
                            Id = new Guid("0c62f3db-1214-48d0-98b0-fdcc9ffc93fe"),
                            Code = "LCI004",
                            Name = "LCI Pré Fixado"
                        });
                });

            modelBuilder.Entity("InvestmentUseCase.Domain.Entities.Investment", b =>
                {
                    b.HasOne("InvestmentUseCase.Domain.Entities.Customer", "Customer")
                        .WithMany("Investments")
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("InvestmentUseCase.Domain.Entities.InvestmentProduct", "InvestmentProduct")
                        .WithMany()
                        .HasForeignKey("InvestmentProductId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Customer");

                    b.Navigation("InvestmentProduct");
                });

            modelBuilder.Entity("InvestmentUseCase.Domain.Entities.Customer", b =>
                {
                    b.Navigation("Investments");
                });
#pragma warning restore 612, 618
        }
    }
}
